@import "my-vendor-prefixes";
// Sizing shortcuts

.size(@width; @height) {
  width: @width;
  height: @height;
}

.square(@size) {
  .size(@size; @size);
}

// Text overflow
// Requires inline-block or block for proper styling

//.text-overflow() {
//  overflow: hidden;
//  text-overflow: ellipsis;
//  white-space: nowrap;
//}

.text-overflow(@line:1) when (@line<=1) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.text-overflow(@line:1) when (@line>1){
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: @line;
  overflow: hidden;
}

// Clearfix
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
//
// Source: http://nicolasgallagher.com/micro-clearfix-hack/

.clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

// Elements vertical align
//
// Vertically center elements.
// Example: an element has a height of 30px and it's parent element has a height of 60px,so write out `.vertical-align(60px,30px);` to calculate the appropriate top margin.
.vertical-align(@parent-height,@element-height) {
  margin-top: ((@parent-height - @element-height) / 2);
}

// Opacity

.opacity(@opacity) {
  opacity: @opacity;
  // IE8 filter
  @opacity-ie: (@opacity * 100);
  filter: ~"alpha(opacity=@{opacity-ie})";
}

.hover(@bg-color,@color){
  &:hover{
    background: @bg-color;
    color: @color;
  }
}
.hover-txt(@color){
  &:hover{
    color: @color;
  }
}
.hover-bg(@bg-color){
  &:hover{
    background: @bg-color;
  }
}

.border-radius(@radius){
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
}

//@-webkit-keyframes fade-in {
//  from {
//    opacity: 0;
//  }
//  to {
//    opacity: 1;
//  }
//}
//@-o-keyframes fade-in {
//  from {
//    opacity: 0;
//  }
//  to {
//    opacity: 1;
//  }
//}
//@keyframes fade-in {
//  from {
//    opacity: 0;
//  }
//  to {
//    opacity: 1;
//  }
//}
//
//@-webkit-keyframes fade-in-down {
//  from {
//    opacity: 0;
//    .translate(0,-50%);
//  }
//  to {
//    opacity: 1;
//    .translate(0,0);
//  }
//}
//@-o-keyframes fade-in-down {
//  from {
//    opacity: 0;
//    .translate(0,-50%);
//  }
//  to {
//    opacity: 1;
//    .translate(0,0);
//  }
//}
//@keyframes fade-in-down {
//  from {
//    opacity: 0;
//    .translate(0,-50%);
//  }
//  to {
//    opacity: 1;
//    .translate(0,0);
//  }
//}
//
//@-webkit-keyframes fade-out-up {
//  from {
//    opacity: 1;
//    .translate(0,0);
//  }
//  to {
//    opacity: 0;
//    .translate(0,-50%);
//  }
//}
//@-o-keyframes fade-out-up {
//  from {
//    opacity: 1;
//    .translate(0,0);
//  }
//  to {
//    opacity: 0;
//    .translate(0,-50%);
//  }
//}
//@keyframes fade-out-up {
//  from {
//    opacity: 1;
//    .translate(0,0);
//  }
//  to {
//    opacity: 0;
//    .translate(0,-50%);
//  }
//}
//去掉input[type="number"] 按钮
.input-number(){
  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
  }
  input[type="number"]{
    -moz-appearance: textfield;
  }
}

.background-size(@size){
  background-size: @size;
  -moz-background-size: @size;
  -o-background-size: @size;
  -webkit-background-size: @size;
}

.display-flex(@value:flex) when (@value=flex){
  display: -webkit-flex; /* Safari */
  display: flex;
}
.display-flex(@value:flex) when (@value=inline-flex){
  display: -webkit-inline-flex; /* Safari */
  display: flex;
}
//主轴排列方向  row | row-reverse | column | column-reverse;
// row（默认值）：主轴为水平方向，起点在左端。
// row-reverse：主轴为水平方向，起点在右端。
// column：主轴为垂直方向，起点在上沿。
// column-reverse：主轴为垂直方向，起点在下沿。
.flex-direction(@value){
  -webkit-flex-direction: @value;
  -ms-flex-direction: @value;
  flex-direction: @value;
}
//换行 nowrap | wrap | wrap-reverse
.flex-wrap(@value:wrap){
  -webkit-flex-wrap: @value;
  -ms-flex-wrap: @value;
  flex-wrap: @value;
}
//flex-direction 和 flex-wrap 的简写形式
.flex-flow(@value){
  -webkit-flex-flow: @value;
  flex-flow: @value;
}
//项目在主轴上的对齐方式
//flex-start（默认值）：左对齐
//flex-end：右对齐
//center： 居中
//space-between：两端对齐，项目之间的间隔都相等。
//space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。
.justify-content(@value){
  -webkit-justify-content: @value;
  justify-content: @value;
}
//align-items属性定义项目在交叉轴上如何对齐  flex-start | flex-end | center | baseline | stretch
// flex-start：交叉轴的起点对齐。
// flex-end：交叉轴的终点对齐。
// center：交叉轴的中点对齐。
// baseline: 项目的第一行文字的基线对齐。
// stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。
.align-items(@value){
  -webkit-align-items: @value;
  align-items: @value;
}
//align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。
// flex-start | flex-end | center | space-between | space-around | stretch
// flex-start：与交叉轴的起点对齐。
// flex-end：与交叉轴的终点对齐。
// center：与交叉轴的中点对齐。
// space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。
// space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。
// stretch（默认值）：轴线占满整个交叉轴。
.align-content(@value){
  -webkit-align-content: @value;
  align-content: @value;
}

//order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。

//flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。
.flex-grow(@value){
  flex-grow: @value;
  -webkit-flex-grow: @value;
}
//flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。
.flex-shrink(@value){
  flex-shrink: @value;
  -webkit-flex-shrink: @value;
}
//flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。
.flex-basis(@value){
  flex-basis: @value;
  -webkit-flex-basis: @value;
}
//flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。
.flex(@flex-grow:1,@flex-shrink:1,@flex-basis:auto){
  flex: @flex-grow @flex-shrink @flex-basis;
  -webkit-flex: @flex-grow @flex-shrink @flex-basis;
}
//align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。
//auto | flex-start | flex-end | center | baseline | stretch
.align-self(@value){
  align-self: @value;
  -webkit-align-self: @value;
}

.translateZ(@value:0){
  -webkit-transform: translateZ(@value);
  -moz-transform: translateZ(@value);
  -ms-transform: translateZ(@value);
  -o-transform: translateZ(@value);
  transform: translateZ(@value);
}